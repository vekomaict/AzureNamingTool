@page "/reference"
@using AzureNamingTool.Helpers
@using AzureNamingTool.Models
@using AzureNamingTool.Services
@using System.Text.RegularExpressions
@inject IJSRuntime JsRuntime
@inject ILogger<Reference> Logger
@inject NavigationManager NavigationManager
@inject StateContainer state
@inject IToastService toastService

<PageTitle>Azure Naming Tool - Reference</PageTitle>

<div class="card @theme.ThemeStyle">
    <div class="card-body">
        <div style="float:left;">
            <h1>
                Reference
            </h1>
        </div>
        <div style="float:right;">
            <button class="btn btn-secondary" title="Instructions" @onclick="@(e => ModalHelper.ShowInformationModal(Modal!, theme, "bg-navcolor", "Reference", String.Empty, "referenceinstructions", false))">
                <span class="oi oi-document" aria-hidden="true"></span> Documentation
            </button>
        </div>
        <div style="clear:both;"></div>
        <div class="mb-3">This page provides an example name for each resource type using the defined configuration.</div>

        @if (servicesData.ResourceTypes == null)
        {
            <div class="spinner-border" role="status">
                <span class="sr-only"></span>
            </div>
        }
        else
        {
            <div class="card mb-3">
                <div class="card-header bg-default text-dark">
                    <a class="text-decoration-none text-dark" data-bs-toggle="collapse" style="display:block;font-weight:bold;" href="#jumpto" role="button" aria-expanded="false" aria-controls="jumpto">
                        <span class="oi oi-chevron-bottom" aria-hidden="true"></span> Jump To
                    </a>
                </div>
                <div class="collapse show card card-body @theme.ThemeStyle" id="jumpto">
                    <p>
                        Use the filters below to jump to a specifc resource type.
                    </p>
                    <select @onchange="OnCategoryChanged" class="form-control @theme.ThemeStyle" aria-label="Select category">
                        <option value="">Select a resource type provider (OPTIONAL)</option>
                        @foreach (var category in @categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>

                    <select @onchange="OnTypeChanged" class="form-control @theme.ThemeStyle" aria-label="Select type">
                        <option value="">Select a resource type</option>
                        @foreach (var type in @ResourceTypeService.GetFilteredResourceTypes(servicesData.ResourceTypes, selectedResourceTypeCategory))
                        {
                            @if (!String.IsNullOrEmpty(type.Property))
                            {
                                <option value="@type.Id">@type.Resource - @type.Property (@type.ShortName)</option>
                            }
                            else
                            {
                                <option value="@type.Id">@type.Resource (@type.ShortName)</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <table class="table table-responsive  @theme.ThemeStyle w-100">
                <tbody>
                    @foreach (var resourcetype in servicesData.ResourceTypes)
                    {
                        if (!IsTypeVisible(resourcetype))
                            continue;
                        <tr>
                            <td>
                                <table class="table table-responsive">
                                    <tbody>
                                        <tr class="bg-secondary">
                                            <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;">
                                                @if (!String.IsNullOrEmpty(resourcetype.Property))
                                                {
                                                    <h5 class="text-white bg-secondary" style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;">@resourcetype.Resource - @resourcetype.Property                                                  </h5>
                                                }
                                                else
                                                {
                                                    <h5 class="text-white bg-secondary" style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;">@resourcetype.Resource                                                    </h5>
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;font-style:italic;">
                                                @if (filteredscopes.Contains(resourcetype.Scope))
                                                {
                                                    <table class="table table-success w-100" style="margin-bottom:0;">
                                                        <tbody>
                                                            <tr>
                                                                <td>
                                                                    <span class="fw-bold">Example:  @GenerateName(resourcetype, resourcetype.ShortName, resourcetype.StaticValues)</span><a id="@resourcetype.Id"></a>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                }
                                                else
                                                {
                                                    <table class="table table-warning w-100" style="margin-bottom:0;">
                                                        <tbody>
                                                            <tr>
                                                                <td>
                                                                    <span class="fw-bold">This resource has a lower-level scope and does not require a unique name.</span><a id="@resourcetype.Id"></a>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @if (String.IsNullOrEmpty(resourcetype.StaticValues))
                                                {
                                                    <table class="table @theme.ThemeStyle w-100">
                                                        <tbody>
                                                            @if (filteredscopes.Contains(resourcetype.Scope))
                                                            {
                                                                <tr>
                                                                    <td colspan="2" class="table-secondary">
                                                                        <span class="fw-bold">Components</span>
                                                                    </td>
                                                                </tr>
                                                                @foreach (var resourceComponent in servicesData.ResourceComponents!)
                                                                {
                                                                    if (!resourcetype.Exclude.ToLower().Split(',').Contains(GeneralHelper.NormalizeName(resourceComponent.Name, true)))
                                                                    {
                                                                        if (!resourcetype.Optional.ToLower().Split(',').Contains(GeneralHelper.NormalizeName(resourceComponent.Name, true)))
                                                                        {
                                                                            switch (resourceComponent.Name)
                                                                            {
                                                                                case "ResourceEnvironment":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Environment:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @servicesData.ResourceEnvironments![0].Name (@servicesData.ResourceEnvironments[0].ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceInstance":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Instance:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            1
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceLocation":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Location:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @servicesData.ResourceLocations![0].Name (@servicesData.ResourceLocations[0].ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceOrg":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Org:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @servicesData.ResourceOrgs![0].Name (@servicesData.ResourceOrgs[0].ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceProjAppSvc":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            ProjAppSvc:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @servicesData.ResourceProjAppSvcs![0].Name (@servicesData.ResourceProjAppSvcs[0].ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceType":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Type:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @resourcetype.Resource (@resourcetype.ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceUnitDept":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Unit/Dept:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @servicesData.ResourceUnitDepts![0].Name (@servicesData.ResourceUnitDepts[0].ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                case "ResourceFunction":
                                                                                    <tr>
                                                                                        <td class="align-top w-25">
                                                                                            Function:
                                                                                        </td>
                                                                                        <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                            @servicesData.ResourceFunctions![0].Name (@servicesData.ResourceFunctions![0].ShortName)
                                                                                        </td>
                                                                                    </tr>
                                                                                    break;
                                                                                default:
                                                                                    if (resourceComponent.IsCustom)
                                                                                    {
                                                                                        @if (!resourceComponent.IsFreeText)
                                                                                        {
                                                                                            if (servicesData.CustomComponents!.Where(x => x.ParentComponent == GeneralHelper.NormalizeName(resourceComponent.Name, true)).Count() > 0)
                                                                                            {
                                                                                                <tr>
                                                                                                    <td class="align-top w-25">
                                                                                                        @resourceComponent.Name:
                                                                                                    </td>
                                                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                                        <span>
                                                                                                            @servicesData.CustomComponents!.Where(x => x.ParentComponent == GeneralHelper.NormalizeName(resourceComponent.Name, true)).FirstOrDefault()!.Name
                                                                                                            (@servicesData.CustomComponents!.Where(x => x.ParentComponent == GeneralHelper.NormalizeName(resourceComponent.Name, true)).FirstOrDefault()!.ShortName)
                                                                                                        </span>
                                                                                                    </td>
                                                                                                </tr>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <tr>
                                                                                                <td class="align-top w-25">
                                                                                                    @resourceComponent.Name:
                                                                                                </td>
                                                                                                <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                                                    <span>
                                                                                                        [Free Form / Random]
                                                                                                    </span>
                                                                                                </td>
                                                                                            </tr>
                                                                                        }
                                                                                    }
                                                                                    break;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            <tr>
                                                                <td colspan="2" class="table-secondary">
                                                                    <span class="fw-bold">Naming Guidelines</span>
                                                                </td>
                                                            </tr>
                                                            @if (!String.IsNullOrEmpty(@resourcetype.Optional))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Optional Components:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.Optional
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (!String.IsNullOrEmpty(@resourcetype.Exclude))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Excluded Components:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.Exclude
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (!String.IsNullOrEmpty(@resourcetype.ShortName))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Short Name:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.ShortName
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (!String.IsNullOrEmpty(@resourcetype.Scope))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Scope:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.Scope
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if ((!String.IsNullOrEmpty(@resourcetype.LengthMin)) && (!String.IsNullOrEmpty(@resourcetype.LengthMax)))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Length:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.LengthMin - @resourcetype.LengthMax characters
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (!String.IsNullOrEmpty(@resourcetype.ValidText))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Valid Characters:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.ValidText
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (!String.IsNullOrEmpty(@resourcetype.InvalidCharacters))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Invalid Characters:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.InvalidCharacters
                                                                    </td>
                                                                </tr>
                                                            }
                                                            @if (!String.IsNullOrEmpty(@resourcetype.Regx))
                                                            {
                                                                <tr>
                                                                    <td class="align-top w-25">
                                                                        Regx:
                                                                    </td>
                                                                    <td style="word-wrap:anywhere;overflow-wrap:anywhere;white-space: normal;" class="align-top">
                                                                        @resourcetype.Regx
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                }
                                                else
                                                {
                                                    <span>This resource type has a unique naming pattern and must be manually named.</span>
                                                }
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>


@code {
    [CascadingParameter]
    protected ThemeInfo theme { get; set; } = new();
    [CascadingParameter]
    public IModalService? Modal { get; set; }
    private ServicesData servicesData = new();
    private ResourceDelimiter? resourceDelimiter = new();
    public string filterData { get; set; } = String.Empty;
    private string selectedResourceTypeCategory = String.Empty;
    private string[] filteredscopes = new string[] { "resource group", "resource group & region", "region", "global", "subscription", "tenant" };
    private List<string> categories = new();

    protected override async Task OnInitializedAsync()
    {
        await SetServicesData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (servicesData == null)
        {
            await SetServicesData();
        }
    }

    private async Task SetServicesData()
    {
        try
        {
            servicesData = await ServicesHelper.LoadServicesData(servicesData, false);
            if (GeneralHelper.IsNotNull(servicesData))
            {
                resourceDelimiter = (ResourceDelimiter)servicesData.ResourceDelimiters![0];

                // Get the list of categories
                categories = ResourceTypeService.GetTypeCategories(servicesData.ResourceTypes!);
            }
            else
            {
                toastService.ShowError("There was a problem loading the page. Please try again");
            }
        }
        catch (Exception ex)
        {
            AdminLogService.PostItem(new AdminLogMessage() { Title = "ERROR", Message = ex.Message });
            toastService.ShowError("There was a problem loading the page. Please try again");
        }
    }

    protected string GenerateName(ResourceType type, string shortName, string staticvalues)
    {
        var name = "";
        if (String.IsNullOrEmpty(staticvalues))
        {
            foreach (ResourceComponent resourceComponent in servicesData.ResourceComponents!)
            {
                string normalizedcomponentname = GeneralHelper.NormalizeName(resourceComponent.Name, true);
                // Check if the component is excluded for the resource type
                if (!type.Exclude.ToLower().Split(',').Contains(normalizedcomponentname))
                {
                    // Remove any optional components
                    if (!type.Optional.ToLower().Split(',').Contains(normalizedcomponentname))
                    {
                        if (name != "")
                        {
                            name += resourceDelimiter!.Delimiter;
                        }
                        switch (resourceComponent.Name)
                        {
                            case "ResourceEnvironment":
                                name += servicesData.ResourceEnvironments![0].ShortName;
                                break;
                            case "ResourceFunction":
                                name += servicesData.ResourceFunctions![0].ShortName;
                                break;
                            case "ResourceInstance":
                                name += "1";
                                break;
                            case "ResourceLocation":
                                name += servicesData.ResourceLocations![0].ShortName;
                                break;
                            case "ResourceOrg":
                                name += servicesData.ResourceOrgs![0].ShortName;
                                break;
                            case "ResourceProjAppSvc":
                                name += servicesData.ResourceProjAppSvcs![0].ShortName;
                                break;
                            case "ResourceType":
                                name += shortName;
                                break;
                            case "ResourceUnitDept":
                                name += servicesData.ResourceUnitDepts![0].ShortName;
                                break;
                            default:
                                if (resourceComponent.IsCustom)
                                {
                                    if (!resourceComponent.IsFreeText)
                                    {
                                        if (servicesData.CustomComponents!.Where(x => x.ParentComponent == normalizedcomponentname).Count() > 0)
                                        {
                                            name += servicesData.CustomComponents!.Where(x => x.ParentComponent == normalizedcomponentname).FirstOrDefault()!.ShortName;
                                        }
                                    }
                                    else
                                    {
                                        name += GeneralHelper.GenerateRandomString(Convert.ToInt32(resourceComponent.MaxLength), resourceComponent.Alphanumeric);
                                    }
                                }
                                break;
                        }
                    }
                }
            }

            // Apply the regex to the generate name
            Regex regx = new(type.Regx);
            Match match = regx.Match(name);
            if (!match.Success)
            {
                // Strip the delimiter in case that is causing the issue
                if (!String.IsNullOrEmpty(resourceDelimiter!.Delimiter))
                {
                    name = name.Replace(resourceDelimiter!.Delimiter, "");
                }
            }
        }
        else
        {
            name = staticvalues;
        }
        return name;
    }

    private void OnCategoryChanged(ChangeEventArgs e)
    {
        selectedResourceTypeCategory = e.Value!.ToString()!;

    }

    private async void OnTypeChanged(ChangeEventArgs e)
    {
        await JsRuntime.InvokeVoidAsync("scrollIntoView", e.Value!.ToString());
    }

    private void OnInstructionsClick()
    {
        NavigationManager.NavigateTo("/instructions");
    }

    public bool IsTypeVisible(ResourceType type)
    {
        bool visible = true;

        if (!string.IsNullOrEmpty(filterData))
        {
            if ((!type.Resource.Contains(filterData, StringComparison.OrdinalIgnoreCase)) && (!type.ShortName.Contains(filterData, StringComparison.OrdinalIgnoreCase)))
                visible = false;
        }
        return visible;
    }
}
